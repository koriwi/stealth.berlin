---
import type { CollectionEntry } from "astro:content";
import { cleanName, twSizes } from "../lib";
import FormattedDate from "./FormattedDate.astro";
import Picture from "./Picture.astro";
interface Props {
  post: CollectionEntry<"posts">;
}
const { post } = Astro.props;
---

<a class="rounded-sm overflow-hidden" href={"/" + post.slug}>
  <div class="max-w-lg rounded-sm cursor-pointer flex justify-between flex-col">
    <Picture
      className="w-full"
      sizes={{ sm: 640, md: 768 }}
      src={post.data.gallery[0]}
    />

    <div class="bg-gradient-to-b from-neutral-100/20 to-neutral-100/10 pt-1">
      <div class="grid grid-cols-4 gap-1 px-1">
        {
          post.data.gallery
            .slice(1, 4)
            .map((picture) => (
              <Picture
                className="w-full"
                src={picture}
                sizes={{ sm: 146, md: 185 }}
              />
            ))
        }
        {
          post.data.gallery.length - 4 > 0 && (
            <div class="flex justify-center items-center text-center leading-tight gap-2 bg-neutral-600/50">
              +{post.data.gallery.length - 4}
              <span class="hidden md:block"> Bilder</span>
            </div>
          )
        }
      </div>
      <div class="p-4">
        <h3 class="text-ellipsis overflow-hidden whitespace-nowrap">
          {post.data.title}
        </h3>
        <div class="flex flex-col-reverse lg:flex-row justify-between">
          <FormattedDate date={post.data.pubDate} />
          {cleanName(post.slug.split("/")[0])}: {post.data.version}
        </div>
      </div>
    </div>
  </div>
</a>
